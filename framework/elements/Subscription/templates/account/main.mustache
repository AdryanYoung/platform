<div class="cm-sub-logo"></div>

<div id="cm-subscription-feed">

    <div class="account-settings">
        <a href="#" class="feed-button cm-logout">Logout</a>
        <a href="#" class="feed-button cm-feed">Return to feed</a>

    </div>

    <h1 class="cm-success-title">Account Settings</h1>

    {{#form_result}}
        <div class="cm-subscription-message">
            <p>{{form_result}}</p>
        </div>
    {{/form_result}}
    <div class="main-settings">
    {{#address}}
    <h3>Shipping Address</h3>
    <p>
        <strong>{{customer_shipping_name}}</strong><br>
        {{customer_address1}}<br>
        {{#customer_address2}}
            {{customer_address2}}<br>
        {{/customer_address2}}
        {{customer_city}}, {{customer_region}} {{customer_postalcode}} {{customer_countrycode}}
    </p>
    {{/address}}

    <a href="#" class="feed-button cm-address">Update Address</a>
        <div class="clear"></div>

    <h3>Subscription settings</h3>

    <p><strong>Status</strong> {{subscriber.status}}</p>
    <p><strong>Member since </strong> {{subscriber.start_date}}</p>

    <p><strong>Payment source</strong> {{customer.brand}} ending in {{customer.last_four}}, expires {{customer.expiry}} </p>
        <p><strong>Contribution</strong> {{currency}}{{customer.payment}}/per {{customer.interval}}</p>
        <div class="clear"></div>
        <a href="#" class="feed-button cm-billing">Change payment source</a>
    <a href="#" class="feed-button cm-amount">Change contribution amount</a>
        <div class="clear"></div>

    <p><strong>Next renewal date</strong> {{customer.expires}}</p>
      <a href="#" class="feed-button cm-cancel">Cancel my subscription</a>

    </div>

</div>

{{> account/partials/confirm }}

<script type="text/javascript">

    var cm = window.cashmusic;

    cm.events.add(cm,'ready', function(e) {

        cm.session.start();
        cm.session.setid({"id":"{{session_id}}"});

        var feed = document.querySelector('.cm-feed');
        var logout = document.querySelector('.cm-logout');

        var address = document.querySelector('.cm-address');

        var billing = document.querySelector('.cm-billing');

        var cancel = document.querySelector('.cm-cancel');


        if (feed) {
            cm.events.add(feed, 'click', function (e) {
                e.preventDefault();
                cm.overlay.reveal({"element":"{{element_id}}","endpoint":"{{public_url}}","state":"logged_in_index"});
            });
        }

        if (logout) {
            cm.events.add(logout, 'click', function (e) {
                e.preventDefault();
                cm.overlay.reveal({"element":"{{element_id}}","endpoint":"{{public_url}}","state":"logout"});
            });
        }

        if (address) {
            cm.events.add(address, 'click', function (e) {
                e.preventDefault();
                cm.overlay.reveal({"element":"{{element_id}}","endpoint":"{{public_url}}","state":"account_address"});
            });
        }

        if (cancel) {

            document.getElementById("modal_message").innerText = "Are you sure you want to cancel?";

            cm.events.add(cancel, 'click', function (e) {
                document.getElementById("modal_dialog").style.visibility = "visible";
            });

            cm.events.add(document.querySelector('.confirm-true'), 'click', function (e) {
                e.preventDefault();
                document.getElementById("modal_dialog").style.visibility = "hidden";
                cm.overlay.reveal({"element":"{{element_id}}","endpoint":"{{public_url}}","state":"cancel"});

            });

            cm.events.add(document.querySelector('.confirm-false'), 'click', function (e) {
                e.preventDefault()
                document.getElementById("modal_dialog").style.visibility = "hidden";
            });
        }

        var stripe_public_key = false;

        // get stripe public key
        {{#stripe_public_key}}
            var stripe_public_key = "{{stripe_public_key}}";
        {{/stripe_public_key}}

        if (billing) {
            cm.events.add(billing, 'click', function (e) {
                e.preventDefault();
                /*var price = subscribe_button.getAttribute("data-price");
                var minimum = subscribe_button.getAttribute('data-min');

                if (parseInt(price) < parseInt(minimum)) {
                    flexible_price.value = minimum;
                    plan_price.innerHTML = minimum;
                    subscribe_button.setAttribute("data-price", minimum);
                    //flexible_price.className += "shake";
                    return false;
                } else {
                    /!*flexible_price.className =
                            flexible_price.className.replace(new RegExp('(?:^|\\s)'+ 'shake' + '(?:\\s|$)'), ' ');*!/
                }*/

                cm.checkout.begin({
                    "stripe": stripe_public_key,
                    "paypal": false,
                    "currency": "usd", // USD = auto default
                    "recurring": true,
                    "update_only": true,
                    "default_name": "{{user.display_name}}",
                    "default_email": "{{user.email_address}}",
                    "shipping": false,
                    "total": "{{currency}}" + parseFloat({{customer.payment}}),
                    "transaction_message": "/{{customer.interval}}"
                });
            });

            console.log(cm.events);
            cm.events.remove(cm, 'checkoutdata', function(payment) {});
            cm.events.add(cm, 'checkoutdata', function (payment) {
                var f = document.createElement('form');
                f.method = 'post';
                f.action = '';
                f.id = "subscription_form";

                var els = ['cash_request_type','cash_action','element_id','price','stripe','origin','email_address','subscription_plan','customer_name','geo', 'shipping_info', 'finalize_url'];
                for (var i = 0, len = els.length; i < len; i++) {
                    var inp = document.createElement('input');
                    inp.type = 'hidden';
                    inp.name = els[i];
                    inp.value = '';
                    f.appendChild(inp);
                }

                f.cash_request_type.value = 'commerce';
                f.cash_action.value = 'updatesubscriptionpayment';
                        {{#session_id}}f.session_id = '{{session_id}}';{{/session_id}}
                f.element_id.value = {{element_id}};
                f.price.value = parseFloat(subscribe_button.getAttribute('data-price'));
                f.subscription_plan.value = subscribe_button.getAttribute('data-plan-id');
                f.origin.value = payment.detail.origin;
                f.email_address.value = payment.detail.email;
                f.customer_name.value = payment.detail.name;
                f.geo.value = cm.geo;

                f.subscriber_id.value = {{subscriber.id}};

                if (cm.embedded) {
                    if (cm.get['params']['location']) {
                        f.finalize_url.value = encodeURI(cm.get['params']['location']);
                    } else {
                        f.finalize_url.value = encodeURI(window.location.href);
                    }
                } else {
                    f.finalize_url.value = encodeURI(top.location.href);
                }

                if (payment.detail.stripe) {
                    f.stripe.value = payment.detail.stripe;
                }

                // add shipping to form
                if (payment.detail.shipping) {
                    f.shipping_info.value = JSON.stringify(payment.detail.shipping);

                }

                initiatePayment(f);
                //var f = undefined;

            });

            cm.loadScript(cm.path + '/checkout/checkout.js', function () {
                cm.checkout.prep();
            });
        }



        function initiatePayment(f) {
            cm.ajax.send(
                    '{{public_url}}/request/payload',
                    cm.ajax.encodeForm(f),
                    function(details) {
                        console.log(f)
                        if (details.substring(0,4) == 'http') {
                            top.location.href = details;
                        } else if (details == '200') {
                            cm.overlay.reveal({"element":"{{element_id}}","endpoint":"{{public_url}}","state":"success"});
                            return true;
                        } else {
                            cm.overlay.reveal(error_messages[details]);
                        }
                    },
                    function(details) {
                        cm.overlay.reveal(error_messages[details]);
                    }
            );
        }

    });

</script>