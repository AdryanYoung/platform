{{#error_message}}<div class="cash_error cash_{{element_type}}_error">{{error_message}}</div>{{/error_message}}

<style type="text/css">
    .cashmusic-sp-actions {
        position:relative;
        z-index:100;
    }
    #cashmusic-sp-overlay {
        display:none;
        position:absolute;
        top:0;
        left:0;
        width:100%;
        height:100%;
        z-index:500;
    }
    .cashmusic-sp-loading {
        position:absolute;
        top:50%;
        left:50%;
        margin-top:-12px;
        margin-left:-12px;
        background-color:transparent;
        border-bottom: 3px solid #ccc;
        border-left: 3px solid #ccc;
        border-right: 3px solid #666;
        border-top: 3px solid #666;
        border-radius: 100%;
        height: 24px;
        width: 24px;
        -webkit-animation: spin .9s infinite linear;
        -moz-animation: spin .9s infinite linear;
        -ms-animation: spin .9s infinite linear;
        -o-animation: spin .9s infinite linear;
        animation: spin .9s infinite linear;
    }
    @keyframes "spin" {
        from {
            -webkit-transform: rotate(0deg);
            -moz-transform: rotate(0deg);
            -o-transform: rotate(0deg);
            -ms-transform: rotate(0deg);
            transform: rotate(0deg);
        }
        to {
            -webkit-transform: rotate(359deg);
            -moz-transform: rotate(359deg);
            -o-transform: rotate(359deg);
            -ms-transform: rotate(359deg);
            transform: rotate(359deg);}
    }
    @-moz-keyframes spin {
        from {-moz-transform: rotate(0deg);transform: rotate(0deg);}
        to {-moz-transform: rotate(359deg);transform: rotate(359deg);}
    }
    @-webkit-keyframes "spin" {
        from {-webkit-transform: rotate(0deg);transform: rotate(0deg);}
        to {-webkit-transform: rotate(359deg);transform: rotate(359deg);}
    }
    @-ms-keyframes "spin" {
        from {-ms-transform: rotate(0deg);transform: rotate(0deg);}
        to {-ms-transform: rotate(359deg);transform: rotate(359deg);}
    }
    @-o-keyframes "spin" {
        from {-o-transform: rotate(0deg);transform: rotate(0deg);}
        to {-o-transform: rotate(359deg);transform: rotate(359deg);}
    }
</style>

<div class="cashmusic-sp-actions">
    <div class="cashmusic-sp-actions" id="actionspc">

<form id="cash_{{element_type}}_form_{{element_id}}" class="cash_form {{element_type}}" method="post" action="">
    <input type="hidden" name="cash_request_type" value="commerce" />
    <input type="hidden" name="cash_action" value="initiatecheckout" />
    <input type="hidden" name="element_id" value="{{element_id}}" />
    <input type="hidden" name="item_id" value="{{item_id}}" />
    <input type="hidden" name="connection_id" value="{{connection_id}}" />
    <input type="hidden" name="user_id" value="{{user_id}}" />
    <input type="hidden" name="total_price" value="{{total_price}}" />

    <div class="cashmusic-sp-actions">

        <div id="cashmusic-sp-overlay">
            <div class="cashmusic-sp-loading"></div>
        </div>


        <div id="payment-errors"></div>
    </div>
</form>
        </div>
    </div>

<!-- also conditionals for stripe -->
<script type="text/javascript" src="https://js.stripe.com/v2/"></script>
<script type="text/javascript">
    (function() {
        var connection_type = "{{connection_type}}";
        var getToken = function(callback) {

            Stripe.setPublishableKey('{{public_key}}');
            Stripe.card.createToken({

                name: document.getElementById('name').value,
                number: document.getElementById('card-number').value,
                cvc: document.getElementById('card-cvc').value,
                exp_month: document.getElementById('card-expiry-month').value,
                exp_year: document.getElementById('card-expiry-year').value

            }, function(status, response, evt) {
                var elementForm = document.getElementById('cash_{{element_type}}_form_{{element_id}}');
                if (response.error) {
                    // Show the errors on the form
                    document.getElementById('payment-errors').innerHTML = response.error.message;
                    document.getElementById("stripe-submit").disabled = false;
                } else {
                    // response contains id and card, which contains additional card details
                    var token = response.id;
                    // Insert the token into the form so it gets submitted to the server
                    var input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = 'seedToken';
                    input.value = token;
                    elementForm.appendChild(input);

                    // we need to remove the card fields so they don't get posted over an insecure connection
                    document.getElementById('card-number').parentNode.removeChild(
                            document.getElementById('card-number')
                    );
                    document.getElementById('card-cvc').parentNode.removeChild(
                            document.getElementById('card-cvc')
                    );

                    document.getElementById('card-expiry-month').parentNode.removeChild(
                            document.getElementById('card-expiry-month')
                    );

                    document.getElementById('card-expiry-year').parentNode.removeChild(
                            document.getElementById('card-expiry-year')
                    );

                    // hide the other fields because they look weird on that redirecting screen...
                    document.getElementById("name").style.visibility = "hidden";
                    document.getElementById("email").style.visibility = "hidden";
                    document.getElementById("stripe-submit").style.visibility = "hidden";

                }

                callback();
            });
        };
        var handleSubmit = function(e) {
            if (e && e.preventDefault) {
                e.preventDefault();
            } else if (window.event && window.event.returnValue) {
                window.eventReturnValue = false;
            }

            document.getElementById('actionspc').style.opacity = '0.4';
            document.getElementById('cashmusic-sp-overlay').style.display = 'block';

            var submitUrl = window.location.protocol + '//' + window.location.host;
            /*if (window.location.port) {
                submitUrl += ':' + window.location.port;
            }*/
            submitUrl += '/public/request/payload';

            var ruo = document.createElement("input");
            ruo.setAttribute("type", "hidden");
            ruo.setAttribute("name", "url_only");
            ruo.setAttribute("value", "1");
            elementForm.appendChild(ruo);

            window.cashmusic.ajax.send(
                    submitUrl,
                    window.cashmusic.ajax.encodeForm(elementForm),
                    function (thereply) {
                        if (thereply.substring(0, 4) == 'http') {
                            top.location.href = thereply;
                        }
                    }
            );

            if (window.addEventListener) {
                elementForm.addEventListener('submit', handleSubmit, false);
            } else if (window.attachEvent) {
                elementForm.attachEvent('onsubmit', handleSubmit);
            }
        };

        // temp form injection stuff for stripe, but we can make it for anything
        var insertFormElements = function (e) {
            var form = document.getElementById("cash_{{element_type}}_form_{{element_id}}");

            // cardholder name
            var input = document.createElement("input");
            input.type = "text";
            input.name = "name";
            input.placeholder = "Cardholder name";
            input.id = "name";
            form.appendChild(input);

            // email
            var input = document.createElement("input");
            input.type = "email";
            input.name = "email";
            input.placeholder = "Email";
            input.id = "email";
            form.appendChild(input);

            // card number
            var input = document.createElement("input");
            input.type = "text";
            input.name = "card-number";
            input.placeholder = "Credit card number";
            input.id = "card-number";
            form.appendChild(input);

            // cvv
            var input = document.createElement("input");
            input.type = "text";
            input.name = "card-cvc";
            input.placeholder = "CVV";
            input.id = "card-cvc";
            form.appendChild(input);

            // expiration month
            var input = document.createElement("input");
            input.type = "text";
            input.name = "card-expiry-month";
            input.placeholder = "12";
            input.id = "card-expiry-month";
            form.appendChild(input);

            // expiration year
            var input = document.createElement("input");
            input.type = "text";
            input.name = "card-expiry-year";
            input.placeholder = "2016";
            input.id = "card-expiry-year";
            form.appendChild(input);

            var button = document.createElement("button");
            button.type = "submit";
            button.id = "stripe-submit";
            button.innerHTML = "Submit Payment";

            form.appendChild(button);
        };


        var elementForm = document.getElementById('cash_{{element_type}}_form_{{element_id}}');
        var original_price = elementForm.elements['total_price'].value;

        if (connection_type == "com.paypal") {
            // all we need to do here is submit the form, either via ajax or via regular submit
            if (window.cashmusic.ajax && self!=top) {
                handleSubmit(false);
            } else {
                elementForm.submit();
            }
        } else {
            // if this seed has a form element method, let's use it to populate the form
            if (insertFormElements) {
                insertFormElements();
            }

            // add a submit form listener and act accordingly
            if (window.cashmusic.ajax && self!=top) {
                // ajax submit
                var submitForm = function(e) {
                    e.preventDefault();

                    // get token and then submit
                    getToken(function() {
                        handleSubmit(false);
                    });
                }
            } else {
                // regular submit
                var submitForm = function(e) {

                    e.preventDefault();
                    getToken(function() {
                        elementForm.submit();
                    });
                }
            }

            // add the appropriate submitForm callback to event listener
            if (window.addEventListener) {
                elementForm.addEventListener('submit', submitForm, false);
            } else if (window.attachEvent) {
                elementForm.attachEvent('onsubmit', submitForm);
            }
        }

    })();
</script>
