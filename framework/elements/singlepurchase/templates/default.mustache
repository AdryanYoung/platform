{{#error_message}}
    <div class="cash_error cash_{{element_type}}_error">
        {{error_message}}
    </div>
{{/error_message}}



<div class="cm-store cm-item item-{{item_id}}">
   <div class="cm-store cm-inner">
   <h2>{{item_name}}</h2>
   <span class="cm-itemprice">{{currency}}{{item_price}}{{#item_flexible_price}} {{copy_flexibleprice_suffix}}{{/item_flexible_price}}</span>
   <div class="cm-description">{{{item_description}}}</div>
   {{#is_available}}
   {{#attributes}}
      <select class="cm-attribute" name="{{name}}" data-key="{{key}}" data-itemid="{{item_id}}" data-totalattributes="{{attributes_count}}" data-attributeorder="{{index}}">
         <option value="resetattributes" {{#defaultcountermenu}}data-countermenu='{{defaultcountermenu}}'{{/defaultcountermenu}}>{{copy_choose_verb}} {{key}}</option>
         {{#items}}
         <option value="{{key}}" {{#countermenu}}data-countermenu='{{countermenu}}'{{/countermenu}}>{{key}}</option>
         {{/items}}
      </select>
   {{/attributes}}
   {{#item_flexible_price}}
   <span class="cm-store-flexible-price">
      <span class="cm-store-currency">{{currency}}</span>
      <input type="text" name="total_price" data-itemid="{{item_id}}" data-atleast="{{item_price}}" class="cm-price" value="{{item_price}}" />
   </span>
   {{/item_flexible_price}}
   <button type="button"{{^json_keys}} data-legacykeys="1"{{/json_keys}} data-itemid="{{item_id}}" data-price="{{item_price}}" class="button {{#has_variants}}cm-disabled{{/has_variants}} cm-addtocart cm-item-{{item_id}}"{{#has_variants}} disabled="disabled"{{/has_variants}}>{{#has_variants}}{{copy_choose_variants}}{{/has_variants}}{{^has_variants}}<span class="cm-price">{{currency}}{{item_price}}</span> - {{copy_buy}}{{/has_variants}}</button>
   {{/is_available}}
   {{^is_available}}
      <span class="cm-unavailable">
         {{copy_unavailable}}
      </span>
   {{/is_available}}
   </div>
</div>



<script>
    var cm = window.cashmusic;
    var allowclick = true; // preventing double click

    cm.events.add(cm, 'ready', function (e) {

        cm.loadScript(cm.path + 'checkout/checkout.js', function () {
            cm.events.add(document.getElementById('buy_button'), 'click', function (e) {
                e.preventDefault();

                // get stripe public key or fail
                {{#public_key}}
                    var stripe_public_key = "{{public_key}}";
                {{/public_key}}

                {{^public_key}}
                    var stripe_public_key = false;
                {{/public_key}}

                // set shipping with regions, or to false if there is no shipping
                {{#no_shipping}}
                    var shipping = false;
                {{/no_shipping}}

                {{^no_shipping}}
                    var shipping = {
                        "r1": "{{region1_name}} (${{region1_cost}})",
                        "r2": "{{region2_name}} (${{region2_cost}})"
                    };
                {{/no_shipping}}

                if (allowclick) {
                    cm.checkout.begin({
                        "stripe": stripe_public_key,
                        "paypal": true,
                        "currency": "{{currency}}", // USD = auto default
                        "shipping": shipping, // or bool true for no region selector
                        "testing": true
                    });

                    cm.events.add(cm, 'checkoutdata', function (payment) {

                        cm.overlay.hide();
                        console.log(payment.detail);

                        var elementForm = document.getElementById('cash_{{element_type}}_form_{{element_id}}');

                        // set connection id by selection
                        // calculate totals based on region + product pricing
                        var original_price = elementForm.elements['total_price'].value;

                        // add shipping to form
                        if (payment.detail.shipping) {
                            var shipping = 0;

                            if (payment.detail.shipping['shipping-region'] == "r1") {
                                shipping = {{region1_cost}};
                            }

                            if (payment.detail.shipping['shipping-region'] == "r2") {
                                shipping = {{region2_cost}};
                            }

                            if (shipping > 0) {
                                var price = parseFloat(shipping) + parseFloat(original_price);
                                elementForm.elements['total_price'].value = price;
                            }
                        }
                        // submit form
                        elementForm.submit();


                        if (payment.detail.paypal == true) {
                            console.log("PAYPAL");
                        }

                        if (payment.detail.stripe == true) {
                            console.log("STRIPE");
                        }


                    });

                    allowclick = false;
                    setTimeout(function () {
                        allowclick = true;
                    }, 1000); // only one click per second
                }
            });
        });
    });
</script>
