/*
 * BitmapData.js by Peter Nitsch - https://github.com/pnitsch/BitmapData.js
 * HTML5 Canvas API implementation of the AS3 BitmapData class. 
 */

function hexToRGB(a){return{r:(16711680&a)>>16,g:(65280&a)>>8,b:255&a}}function RGBToHex(a){return a.r<<16|a.g<<8|a.b}function histogramVector(a){for(var b=[],c=0;256>c;c++)b[c]=a;return b}function PRNG(){this.seed=1,this.next=function(){return this.gen()/2147483647},this.nextRange=function(a,b){return a+(b-a)*this.next()},this.gen=function(){return this.seed=16807*this.seed%2147483647}}function BitmapData(a,b,c,d,e){this.width=a,this.height=b,this.rect=new Rectangle(0,0,this.width,this.height),this.transparent=c||!1,this.canvas=e||document.createElement("canvas"),this.context=this.canvas.getContext("2d"),this.canvas.setAttribute("width",this.width),this.canvas.setAttribute("height",this.height),this.drawingCanvas=document.createElement("canvas"),this.drawingContext=this.drawingCanvas.getContext("2d"),this.imagedata=this.context.createImageData(this.width,this.height),this.__defineGetter__("data",function(){return this.imagedata}),this.__defineSetter__("data",function(a){this.imagedata=a}),this.glCanvas=document.createElement("canvas"),this.gl=null,this.program=null,this.gpuEnabled=!0;try{this.gl=this.glCanvas.getContext("experimental-webgl")}catch(f){this.gpuEnabled=!1}return this.va=null,this.tex0=null,this.tex1=null,this.glPixelArray=null,this.initProgram=function(a){var b=this.gl,c=b.createProgram(),d=b.createShader(b.VERTEX_SHADER),e=b.createShader(b.FRAGMENT_SHADER);b.shaderSource(d,a.vsSrc),b.shaderSource(e,a.fsSrc),b.compileShader(d),b.compileShader(e),b.getShaderParameter(d,b.COMPILE_STATUS)||b.deleteProgram(c),b.getShaderParameter(e,b.COMPILE_STATUS)||b.deleteProgram(c),b.attachShader(c,d),b.attachShader(c,e),b.deleteShader(d),b.deleteShader(e),b.linkProgram(c),null!=this.program&&b.deleteProgram(this.program),this.program=c,b.viewport(0,0,this.canvas.width,this.canvas.height),b.useProgram(c);var f=new Float32Array([-1,-1,1,-1,-1,1,1,-1,1,1,-1,1]);this.va=b.createBuffer(),b.bindBuffer(b.ARRAY_BUFFER,this.va),b.bufferData(b.ARRAY_BUFFER,f,b.STATIC_DRAW)},this.initTexture=function(a,b){var c=this.gl,d=c.createTexture();c.enable(c.TEXTURE_2D),c.bindTexture(c.TEXTURE_2D,d),c.texImage2D(c.TEXTURE_2D,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,b),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.LINEAR),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.LINEAR_MIPMAP_LINEAR),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.REPEAT),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.REPEAT),c.generateMipmap(c.TEXTURE_2D),c.bindTexture(c.TEXTURE_2D,null),0==a?(null!=this.tex0&&c.deleteTexture(this.tex0),this.tex0=d,this.glCanvas.setAttribute("width",b.width),this.glCanvas.setAttribute("height",b.height),this.glPixelArray=new Uint8Array(4*b.width*b.height)):(null!=this.tex1&&c.deleteTexture(this.tex1),this.tex1=d)},this.drawGL=function(a){var b=this.gl,c=this.program,d=[a.a,a.c,0,a.b,a.d,0,0,0,1],e=b.getAttribLocation(c,"pos"),f=b.getUniformLocation(c,"r"),g=b.getUniformLocation(c,"t"),h=b.getUniformLocation(c,"tex0"),i=b.getUniformLocation(c,"tex1"),j=b.getUniformLocation(c,"rMat");b.bindBuffer(b.ARRAY_BUFFER,this.va),b.uniform2f(f,2*this.glCanvas.width,2*this.glCanvas.height),b.uniformMatrix3fv(j,!1,new Float32Array(d)),b.uniform2f(g,a.tx,a.ty),b.vertexAttribPointer(e,2,b.FLOAT,!1,0,0),b.enableVertexAttribArray(e),b.uniform1i(h,0),b.activeTexture(b.TEXTURE0),b.bindTexture(b.TEXTURE_2D,this.tex0),b.uniform1i(i,1),b.activeTexture(b.TEXTURE1),b.bindTexture(b.TEXTURE_2D,this.tex1),b.drawArrays(b.TRIANGLES,0,6),b.disableVertexAttribArray(e),b.flush();var k=this.glCanvas.width,l=this.glCanvas.height,m=this.glPixelArray;b.readPixels(0,0,k,l,b.RGBA,b.UNSIGNED_BYTE,m);for(var n,o=this.imagedata.data,p=0;l>p;p++)for(var q=0;k>q;q++)n=4*(q+p*k),o[n]=m[n],o[n+1]=m[n+1],o[n+2]=m[n+2]},this.setPixel=function(a,b,c){var d=hexToRGB(c),e=4*(a+b*this.width),f=this.imagedata.data;f[e+0]=d.r,f[e+1]=d.g,f[e+2]=d.b},this.getPixel=function(a,b){var c=4*(a+b*this.width),d=this.imagedata.data,e={r:d[c+0],g:d[c+1],b:d[c+2]};return RGBToHex(e)},this.clear=function(a){a=a||this.rect,this.context.clearRect(a.x,a.y,a.width,a.height),this.imagedata=this.context.getImageData(0,0,this.canvas.width,this.canvas.height)},this.clone=function(){this.context.putImageData(this.imagedata,0,0);var a=new BitmapData(this.width,this.height,this.transparent);return a.data=this.context.getImageData(0,0,this.width,this.height),a},this.colorTransform=function(a,b){a=a||this.rect,b=b||new ColorTransform;for(var c=this.imagedata.data,d=a.x+a.height,e=a.y+a.height,f=a.y;e>f;f++)for(var g=a.x;d>g;g++){var h=4*(f*this.width+g),i=h+1,j=h+2,k=h+3;c[h]=c[h]*b.redMultiplier+b.redOffset,c[i]=c[i]*b.greenMultiplier+b.greenOffset,c[j]=c[j]*b.blueMultiplier+b.blueOffset,c[k]=c[k]*b.alphaMultiplier+b.alphaOffset}this.context.putImageData(this.imagedata,0,0)},this.applyFilter=function(a,b,c,d){var e=this.clone();d.run(b,this.imagedata.data,e.imagedata.data),this.context.putImageData(this.imagedata,0,0)},this.compare=function(a){if(this.width!=a.width)return-3;if(this.height!=a.height)return-4;if(this.imagedata===a.data)return 0;for(var b,c,d,e=new BitmapData(this.width,this.height),f=0;f<this.height;f++)for(var g=0;g<this.width;g++)b=hexToRGB(a.getPixel(g,f)),c=hexToRGB(this.getPixel(g,f)),d={r:Math.abs(b.r-c.r),g:Math.abs(b.g-c.g),b:Math.abs(b.b-c.b)},e.setPixel(g,f,RGBToHex(d));return e},this.copyCanvas=function(a,b,c,d){this.context.putImageData(this.imagedata,0,0);var e=this.canvas.width-b.width-c.x,f=this.canvas.height-b.height-c.y,g=0>e?b.width+(this.canvas.width-b.width-c.x):b.width,h=0>f?b.height+(this.canvas.height-b.height-c.y):b.height;if(d&&d!=BlendMode.NORMAL)for(var j,k,i=a.getContext("2d").getImageData(b.x,b.y,g,h).data,l=this.imagedata.data,m=0;h>m;m++)for(var n=0;g>n;n++)switch(j=4*(n+m*g),k=4*(n+c.x+(m+c.y)*this.width),d){case BlendMode.ADD:l[k]=Math.min(l[k]+i[j],255),l[k+1]=Math.min(l[k+1]+i[j+1],255),l[k+2]=Math.min(l[k+2]+i[j+2],255);break;case BlendMode.SUBTRACT:l[k]=Math.max(i[j]-l[k],0),l[k+1]=Math.max(i[j+1]-l[k+1],0),l[k+2]=Math.max(i[j+2]-l[k+2],0);break;case BlendMode.INVERT:l[k]=255-i[j],l[k+1]=255-i[j+1],l[k+2]=255-i[j+1];break;case BlendMode.MULTIPLY:l[k]=Math.floor(i[j]*l[k]/255),l[k+1]=Math.floor(i[j+1]*l[k+1]/255),l[k+2]=Math.floor(i[j+2]*l[k+2]/255);break;case BlendMode.LIGHTEN:i[j]>l[k]&&(l[k]=i[j]),i[j+1]>l[k+1]&&(l[k+1]=i[j+1]),i[j+2]>l[k+2]&&(l[k+2]=i[j+2]);break;case BlendMode.DARKEN:i[j]<l[k]&&(l[k]=i[j]),i[j+1]<l[k+1]&&(l[k+1]=i[j+1]),i[j+2]<l[k+2]&&(l[k+2]=i[j+2]);break;case BlendMode.DIFFERENCE:l[k]=Math.abs(i[j]-l[k]),l[k+1]=Math.abs(i[j+1]-l[k+1]),l[k+2]=Math.abs(i[j+2]-l[k+2]);break;case BlendMode.SCREEN:l[k]=255-((255-l[k])*(255-i[j])>>8),l[k+1]=255-((255-l[k+1])*(255-i[j+1])>>8),l[k+2]=255-((255-l[k+2])*(255-i[j+2])>>8);break;case BlendMode.OVERLAY:l[k]=i[j]<128?l[k]*i[j]*halfColorMax:255-(255-l[k])*(255-i[j])*halfColorMax,l[k+1]=i[j+1]<128?l[k+1]*i[j+1]*halfColorMax:255-(255-l[k+1])*(255-i[j+1])*halfColorMax,l[k+2]=i[j+2]<128?l[k+2]*i[j+2]*halfColorMax:255-(255-l[k+2])*(255-i[j+2])*halfColorMax;break;case BlendMode.HARDLIGHT:l[k]=l[k]<128?l[k]*i[j]*halfColorMax:255-(255-l[k])*(255-i[j])*halfColorMax,l[k+1]=l[k+1]<128?l[k+1]*i[j+1]*halfColorMax:255-(255-l[k+1])*(255-i[j+1])*halfColorMax,l[k+2]=l[k+2]<128?l[k+2]*i[j+2]*halfColorMax:255-(255-l[k+2])*(255-i[j+2])*halfColorMax}else this.context.drawImage(a,b.x,b.y,g,h,c.x,c.y,g,h),this.imagedata=this.context.getImageData(0,0,this.canvas.width,this.canvas.height);this.context.putImageData(this.imagedata,0,0)},this.copyChannel=function(a,b,c,d,e){for(var f,g,h,i=BitmapDataChannel.RED,j=BitmapDataChannel.GREEN,k=BitmapDataChannel.BLUE,l=0;l<b.height;l++)for(var m=0;m<b.width;m++){switch(f=a.getPixel(b.x+m,b.y+l),g=hexToRGB(f),d){case i:channelValue=g.r;break;case j:channelValue=g.g;break;case k:channelValue=g.b}switch(h=hexToRGB(this.getPixel(c.x+m,c.y+l)),e){case i:h.r=channelValue;break;case j:h.g=channelValue;break;case k:h.b=channelValue}this.setPixel(c.x+m,c.y+l,RGBToHex(h))}this.context.putImageData(this.imagedata,0,0)},this.copyPixels=function(a,b,c){this.copyCanvas(a.canvas,b,c)},this.draw=function(a,b,c,d,e){sourceMatrix=b||new Matrix,sourceRect=e||new Rectangle(0,0,a.width,a.height),d&&this.gpuEnabled,this.drawingCanvas.setAttribute("width",a.width),this.drawingCanvas.setAttribute("height",a.height),this.drawingContext.transform(sourceMatrix.a,sourceMatrix.b,sourceMatrix.c,sourceMatrix.d,sourceMatrix.tx,sourceMatrix.ty),this.drawingContext.drawImage(a,0,0,a.width,a.height,0,0,a.width,a.height),this.copyCanvas(this.drawingCanvas,sourceRect,new Point(sourceRect.x,sourceRect.y),d)},this.fillRect=function(a,b){this.context.putImageData(this.imagedata,0,0);var c=hexToRGB(b);this.context.fillStyle="rgb("+c.r+","+c.g+","+c.b+")",this.context.fillRect(a.x,a.y,a.width,a.height),this.imagedata=this.context.getImageData(0,0,this.canvas.width,this.canvas.height)},this.floodFill=function(a,b,c){var d=new Array;d.push(new Point(a,b));for(var h,e=this.getPixel(a,b),f=0,g=new BitmapData(this.width,this.height,!0,16777215);d.length>0;)h=d.shift(),++f,h.x<0||h.x>=this.width||h.y<0||h.y>=this.height||(g.setPixel(h.x,h.y,0),this.getPixel(h.x,h.y)==e&&(this.setPixel(h.x,h.y,c),16777215==g.getPixel(h.x+1,h.y)&&d.push(new Point(h.x+1,h.y)),16777215==g.getPixel(h.x,h.y+1)&&d.push(new Point(h.x,h.y+1)),16777215==g.getPixel(h.x-1,h.y)&&d.push(new Point(h.x-1,h.y)),16777215==g.getPixel(h.x,h.y-1)&&d.push(new Point(h.x,h.y-1))))},this.histogram=function(a){a=a||this.rect;for(var h,b={r:[],g:[],b:[]},c=histogramVector(0),d=histogramVector(0),e=histogramVector(0),f=a.width*a.height,g=-1,i=[],j=this.canvas.width-a.width-a.x,k=this.canvas.height-a.height-a.y,l=0>j?a.width+(this.canvas.width-a.width-a.x):a.width,m=0>k?a.height+(this.canvas.height-a.height-a.y):a.height,n=this.imagedata.data,o=a.y;m>o;o++)for(var p=a.x;l>p;p++)h=4*(p+o*this.width),i[g++]=n[h+0],i[g++]=n[h+1],i[g++]=n[h+2];g=0;for(var q=0;f>q;q+=Math.floor(f/256))px=3*g,c[g]=i[px+0],d[g]=i[px+1],e[g]=i[px+2],g++;return b.r=c,b.g=d,b.b=e,b},this.noise=function(a,b,c,d,e){this.rand=this.rand||new PRNG,this.rand.seed=a;var f=BitmapDataChannel.RED,g=BitmapDataChannel.GREEN,h=BitmapDataChannel.BLUE,i=this.imagedata.data;b=b||0,c=c||255,d=d||7,e=e||!1;for(var j,k,l,m,n,o=0;o<this.height;o++)for(var p=0;p<this.width;p++)j=4*(p+o*this.width),k=this.rand.nextRange(b,c),l=this.rand.nextRange(b,c),m=this.rand.nextRange(b,c),e&&(n=(k+l+m)/3,k=l=m=n),i[j+0]=d&f?1*k:0,i[j+1]=d&g?1*l:0,i[j+2]=d&h?1*m:0},this.paletteMap=function(a,b,c,d,e,f){for(var m,p,q,r,s,h=this.canvas.width-b.width-c.x,i=this.canvas.height-b.height-c.y,j=0>h?b.width+(this.canvas.width-b.width-c.x):b.width,k=0>i?b.height+(this.canvas.height-b.height-c.y):b.height,l=a.imagedata.data,t=b.x,u=b.y,v=a.width,w=c.x,x=c.y,y=this.imagedata.data,z=this.width,A=0;k>A;A++)for(var B=0;j>B;B++)m=4*(B+t+(A+u)*v),p=l[m+0],q=l[m+1],r=l[m+2],s=4*(B+w+(A+x)*z),y[s+0]=d[p],y[s+1]=e[q],y[s+2]=f[r];this.context.putImageData(this.imagedata,0,0)},this.perlinNoise=function(a,b,c,d,e){this.rand=this.rand||new PRNG,this.rand.seed=c;var f=BitmapDataChannel.RED,g=BitmapDataChannel.GREEN,h=BitmapDataChannel.BLUE;d=d||7,e=e||!1;var i=this.imagedata.data,j=0;d&f&&(this.simplexR=this.simplexR||new SimplexNoise(this.rand),this.simplexR.setSeed(c),j++),d&g&&(this.simplexG=this.simplexG||new SimplexNoise(this.rand),this.simplexG.setSeed(c+1),j++),d&h&&(this.simplexB=this.simplexB||new SimplexNoise(this.rand),this.simplexB.setSeed(c+2),j++);for(var k,l,m,n,o=0;o<this.height;o++)for(var p=0;p<this.width;p++)k=4*(p+o*this.width),l=d&f?Math.floor(255*.5*(this.simplexR.noise(p/a,o/b)+1)):0,m=d&g?Math.floor(255*.5*(this.simplexG.noise(p/a,o/b)+1)):0,n=d&h?Math.floor(255*.5*(this.simplexB.noise(p/a,o/b)+1)):0,e&&(gray=(l+m+n)/j,l=m=n=gray),i[k+0]=l,i[k+1]=m,i[k+2]=n;this.context.putImageData(this.imagedata,0,0)},this.threshold=function(a,b,c,d,e,f,g,h){f=f||0,g=g||16777215,h=h||!1;for(var n,p,i=this.canvas.width-b.width-c.x,j=this.canvas.height-b.height-c.y,k=0>i?b.width+(this.canvas.width-b.width-c.x):b.width,l=0>j?b.height+(this.canvas.height-b.height-c.y):b.height,m=a.imagedata.data,q=b.x,r=b.y,s=a.width,t=0;l>t;t++)for(var u=0;k>u;u++)switch(n=4*(u+q+(t+r)*s),p=RGBToHex({r:m[n],g:m[n+1],b:m[n+2]}),d){case"<":(e&g)>(p&g)&&(h?this.setPixel(u+c.x,t+c.y,p):this.setPixel(u+c.x,t+c.y,f));break;case"<=":(e&g)>=(p&g)&&(h?this.setPixel(u+c.x,t+c.y,p):this.setPixel(u+c.x,t+c.y,f));break;case">":(p&g)>(e&g)&&(h?this.setPixel(u+c.x,t+c.y,p):this.setPixel(u+c.x,t+c.y,f));break;case">=":(e&g)>=(p&g)&&(h?this.setPixel(u+c.x,t+c.y,p):this.setPixel(u+c.x,t+c.y,f));break;case"==":(p&g)==(e&g)&&(h?this.setPixel(u+c.x,t+c.y,p):this.setPixel(u+c.x,t+c.y,f));break;case"!=":(p&g)!=(e&g)&&(h?this.setPixel(u+c.x,t+c.y,p):this.setPixel(u+c.x,t+c.y,f))}this.context.putImageData(this.imagedata,0,0)},d?this.fillRect(this.rect,d):this.fillRect(this.rect,0),this}const halfColorMax=.00784313725;var BlendMode=new function(){this.ADD="add",this.ALPHA="alpha",this.DARKEN="darken",this.DIFFERENCE="difference",this.ERASE="erase",this.HARDLIGHT="hardlight",this.INVERT="invert",this.LAYER="layer",this.LIGHTEN="lighten",this.HARDLIGHT="hardlight",this.MULTIPLY="multiply",this.NORMAL="normal",this.OVERLAY="overlay",this.SCREEN="screen",this.SHADER="shader",this.SUBTRACT="subtract"},BitmapDataChannel=new function(){this.ALPHA=8,this.BLUE=4,this.GREEN=2,this.RED=1};HTMLCanvasElement.prototype._bitmapData=null,HTMLCanvasElement.prototype.__defineGetter__("bitmapData",function(){return this._bitmapData||(this._bitmapData=new BitmapData(this.width,this.height,!1,0,this)),this._bitmapData});